-*- markdown -*-

# Underscore.strings #

Homepage: http://bitbucket.org/epeli/underscore.strings

Author: Esa-Matti Suuronen (esa-matti aet suuronen dot org)

Javascript lacks good string manipulation operations.
This an attempt to fill that cap. List stock methods can be found
for example from [Dive Into JavaScript][d] -page.

[d]: http://www.diveintojavascript.com/core-javascript-reference/the-string-object 


As name states this an extension for [Underscore.js][u], but it can be used
independently from **_s**-global variable. But with Underscore.js you can
use Object-Oriented style and chaining.

[u]: http://documentcloud.github.com/underscore/

    _("   epeli  ").chain().trim().capitalize().value()
    => "Epeli"


## String Functions ##

**trim** _.trim(string, [characters])

trims defined characters from begining and ending of the string.
Defaults to whitespace characters.

    _.trim("  foobar   ")
    => "foobar"

    _.trim("_-foobar-_", "_-")
    => "foobar"


**ltrim** _.ltrim(string, [characters])

Left trim. Similar to trim, but only for left side.


**rtrim** _.rtrim(string, [characters])

Left trim. Similar to trim, but only for right side.

**startsWith** _.startsWith(string, anotherstring)

Test if string starts with another string.

    _.startsWith("foobar", "foo")
    => true


**endsWith** _.endsWith(string, anotherstring)

Test if string ends with another string.

    _.endsWith("foobar", "bar")
    => true

**contains** _.contains(string, substring)

Tests if string contains a substring

    _.contains("foobar", "ob")
    => true

**capitalize** _.capitalize(string)

Converts first letter of the string to uppercase   

    _.capitalize("epeli")
    => "Epeli"

**sprintf** _.sprintf(string format , [mixed arg1 [, mixed arg2 [ ,...]]])

C like string formatting. 
Credits goes to [Alexandru Marasteanu][o].
For more detailed documentation, see the [original page][o].

[o]: http://www.diveintojavascript.com/projects/sprintf-for-javascript

    _.sprintf("%.1f", 1.17)
    "1.2"
